Ubuntu Feisty Building
======================

- All the packages you need are already good to go in the Ubuntu Feisty 
  repository.
  
- Note that insight is built wrong for Ubuntu and you must use...
    set solib-absolute-prefix /.
  ...in the console window to make it work properly if you intend to use it for
  debugging. This enables it to find shared objects needed for looking up
  debugging symbols.

- Follow these instructions to get the latest OpenCV off of CVS, or use packages.
  http://www.ryanbruce.org/2006/11/30/installing-opencv-from-cvs-on-ubuntu-edgy/

    - Options I am using to configure for building local static library...
        kip@kip-laptop:~/Projects/OpenCV/build$ ../configure --disable-shared 
                                                             --enable-debug 
                                                             --prefix=/home/kip/Projects/OpenCV/install/

- To build slither...
    $ cd trunk
    $ scons -Q [debug=0|1]
    
- Building installer
    $ scons -Q ubuntu

Mac OS X Building
=================

- Install Apple Developer Tools (v 3.0 at time of writing). These instructions
  assume you are using Leopard. Owing to the lack of a package manager and the
  paranoia a company like Apple would have about such things, it is too 
  difficult to adequately support multiple platform SDKs, so we require our
  users to be on Leopard (10.5) or greater.

- Apple Developer Tools come with an older unstable version of wxWidgets (2.5).
  Find a way to get rid of it by removing / renaming the wx-config it ships
  with.

- We will build both wxWidgets and OpenCV as static libraries. This means
  Slither can be distributed as a single OS X package and will not require any
  external dependencies. It's considered bad practice to 'make install' on a
  Mac, since only Apple's stuff is suppose to be in /usr.

- Download and install Fink. Make sure it is latest. Install scons either
  through it, or manually. If you are upgrading from a previous version of OS X
  or the pseudo-open-source "Apple Developer Tools", these instructions are
  useful:
  
    http://www.finkproject.org/download/upgrade.php

- If you get this, ld: library not found for -lcrt1.10.5.o, when linking under
  Leopard against the Tiger 10.4 SDK, run this...
  
    $ sudo ln -s /Developer/SDKs/MacOSX10.4u.sdk/usr/lib/crt1.o /Developer/SDKs/MacOSX10.4u.sdk/usr/lib/crt1.10.5.o

- Building wxWidgets 2.8.7
    - Read this: http://www.wxwidgets.org/wiki/index.php/Getting_started_on_OS_X#Leopard_a.k.a_Mac_OS_X_10.5_Notes
    - Download wxMac and unpack
    - cd into the base dir
    - mkdir build-debug ; cd build-debug
    - ../configure --enable-monolithic
                   --disable-shared 
                   --with-opengl
                   --enable-universal_binary
                   --disable-gtk
                   --disable-debug (or enable, BUT use --enable-debug_gdb and --disable-optimise (optimize has no z) as well)
                   --enable-mediactrl
                   --enable-unicode
                   --prefix=/Users/<you>/local
                   --with-macosx-version-min=10.4
                   --with-macosx-sdk=/Developer/SDKs/MacOSX10.4u.sdk
                   --with-libjpeg=builtin
                   --with-libpng=builtin
                   --with-regex=builtin
                   --with-libtiff=builtin
                   --with-zlib=builtin
                   --with-expat=builtin

    - make
    - make install (you may need to use sudo, depending on where you prefixed)
    - Rinse and repeat for a release mode build, if you like.

- If you intend to install wxWidgets or OpenCV to any place other than 
  /usr/local, you should make sure it is in your path by putting something like
  this in your ~/.profile
  
  export PATH=$PATH:/usr/local/bin:/Users/Kip/local/bin:~/local/include:~/local/lib

- Building OpenCV
    - Use Fink to install cvs, libjpeg, libpng3, and libtiff, if you don't have 
      it already
    - Download source
        - cvs -d:pserver:anonymous@opencvlibrary.cvs.sourceforge.net:/cvsroot/opencvlibrary login
        - cvs -z3 -d:pserver:anonymous@opencvlibrary.cvs.sourceforge.net:/cvsroot/opencvlibrary co -P opencv
    - cd into the base directory
    - mkdir build; cd build
    - This is what I used to build OpenCV on my OS X system...
    - Get rid of -march=prescott and other -mtune / -mcpu stuff from CXXFLAGS in
      configure, it breaks compile on my lab's old PPC PowerBook G4.
    - Enable libpng, tiff, and jpeg in configure.
    - Get rid of ldconfig from Makefile.am under the install-exec-hook. There is
      no ldconfig under OS X. Who writes this shit?
    - ../configure 
            CPPFLAGS="-I/sw/include" 
            CFLAGS=
                "-isysroot /Developer/SDKs/MacOSX10.4u.sdk 
                -arch ppc 
                -arch i386" 
            CXXFLAGS=
                "-isysroot /Developer/SDKs/MacOSX10.4u.sdk 
                -arch ppc 
                -arch i386 
                -I/sw/include" 
            LDFLAGS=
                "-L/sw/lib 
                -framework Foundation 
                -framework CoreFoundation 
                -framework ApplicationServices 
                -framework Carbon 
                -framework QuartzCore 
                -arch i386 -arch ppc" 
            --disable-shared 
            --enable-debug (your choice)
            --disable-dependency-tracking 
            --prefix=<some local folder, eg. /Users/Kip/local>
    - make
    - make install
    - If you want to build the samples in $PREFIX/share/opencv/samples/c, you may need to mess with the Makefile in there to get it to work. Remove the '.exe' 
      extensions from inside of the Makefile, since they aren't needed on OS X. Make sure the OpenCV include and lib directories that you installed to are
      listed in the makefile. You may need to add a bunch of frameworks to the LINKFLAGS also:
      -framework QuartzCore -framework QuickTime -framework Carbon -framework ApplicationServices -framework CoreFoundation
      I also had to move -lcxcore to the end of the linker options since ld complained on my box about not being able to find symbols that are actually defined
      in it.

- Building Slither
    - scons -Q [debug=0|1]

- Building Slither installer
    - scons -Q osx

Win32 Building
==============

- Follow these instructions to install wxWidgets in a MinGW / MSYS build
  environment: http://max.berger.name/howto/wxWidgets/wxWidgets_MinGW.jsp


