Win32 Building
==============

- Follow these instructions to install wxWidgets in a MinGW / MSYS build
  environment: http://max.berger.name/howto/wxWidgets/wxWidgets_MinGW.jsp

Ubuntu Feisty Building
======================

- All the packages you need are already good to go in the Ubuntu Feisty 
  repository.
  
- Note that insight is built wrong for Ubuntu and you must use...
    set solib-absolute-prefix /.
  ...in the console window to make it work properly if you intend to use it for
  debugging.

- Follow these instructions to get the latest OpenCV off of CVS, or use packages.
  http://www.ryanbruce.org/2006/11/30/installing-opencv-from-cvs-on-ubuntu-edgy/

    - Options I am using to configure for building local static library...
        kip@kip-laptop:~/Projects/OpenCV/build$ ../configure --disable-shared 
                                                             --enable-debug 
                                                             --prefix=/home/kip/Projects/OpenCV/install/

- To build slither...

    - cd trunk
    - ./premake-linux --target gnu
    - make [CONFIG=Release|Debug]
    - If you want an installer, ./premake-linux --installer

Mac OS X Building
=================

- Install Apple Developer Tools
- Apple Developer Tools come with an older unstable version of wxWidgets (2.5).
  Find a way to get rid of it by removing / renaming the existing wx-config.

- We will build both wxWidgets and OpenCV as static libraries. This means
  Slither can be distributed as a single OS X package and will not require any
  external dependencies. It's considered bad practice to 'make install' on a
  Mac, since only Apple's stuff is suppose to be in /usr.

- Building wxWidgets 2.8.6
    - Download wxMac and unpack
    - cd into the base dir
    - cd build
    - ../configure --enable-monolithic
                   --disable-shared 
                   --with-opengl
                   --enable-universal_binary
                   --disable-gtk
                   --with-wx-config=../../wxMac-2.8.6/build/wx-config 
                   --disable-debug (or enable, but use --enable-debug_gdb --disable-optimise (optimize has no z) too then)
                   --enable-mediactrl
                   --enable-unicode
                   --prefix=/Users/<you>/local
    - Or if you were cross compiling from Linux or some other platform, perhaps...
    
        export PATH=$PATH:/opt/mac/bin/ && ../configure --host /
            powerpc-apple-darwin8 --enable-monolithic --disable-shared /
            --with-opengl --enable-universal_binary --disable-gtk /
            --with-wx-config=../wxMac-2.8.5/build/wx-config --disable-debug /
            --enable-mediactrl --enable-unicode --prefix=/Users/Kip/local /
            --with-macosx-sdk=/opt/mac/SDKs/MacOSX10.4u.sdk

    - make
    - make install (you may need to use sudo, depending on where you prefixed)

- Building OpenCV
    - Download and install Fink
    - Use Fink to install cvs, libjpeg, libpng3, and libtiff, if you don't have 
      it already
    - Download source
        - cvs -d:pserver:anonymous@opencvlibrary.cvs.sourceforge.net:/cvsroot/opencvlibrary login
        - cvs -z3 -d:pserver:anonymous@opencvlibrary.cvs.sourceforge.net:/cvsroot/opencvlibrary co -P opencv
    - otherlibs/highgui/window_carbon.cpp needs to be patched. Find cvInitSystem
      and remove the installation of the event handler. It does not want to play
      nice with wxMac.
    - cd into the base directory
    - mkdir build; cd build
    - This is what I used to build OpenCV on my OS X system...
    - Get rid of -march=prescott and other -mtune / -mcpu stuff from CXXFLAGS in
      configure, it breaks compile on my lab's old PPC PowerBook G4.
    - Enable libpng, tiff, and jpeg in configure.
    - Get rid of ldconfig from Makefile.am under the install-exec-hook. There is
      no ldconfig under OS X. Who writes this shit?
    - ../configure CPPFLAGS="-I/sw/include" CFLAGS="-isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386" CXXFLAGS="-isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386 -I/sw/include" LDFLAGS="-L/sw/lib -framework Foundation -framework CoreFoundation -framework ApplicationServices -framework Carbon -framework QuartzCore -arch i386 -arch ppc" --disable-shared --disable-dependency-tracking --prefix=<some local folder, eg. /Users/Kip/local>
    - make
    - make install
    - If you want to build the samples in $PREFIX/share/opencv/samples/c, you may need to mess with the Makefile in there to get it to work. Remove the '.exe' 
      extensions from inside of the Makefile, since they aren't needed on OS X. Make sure the OpenCV include and lib directories that you installed to are
      listed in the makefile. You may need to add a bunch of frameworks to the LINKFLAGS also:
      -framework QuartzCore -framework QuickTime -framework Carbon -framework ApplicationServices -framework CoreFoundation
      I also had to move -lcxcore to the end of the linker options since ld complained on my box about not being able to find symbols that are actually defined
      in it.

- Building Slither
    - From the /trunk folder, execute       \/---- NOTE NO equal sign below
        ./premake-mac --target gnu --addpath <wx / opencv path>
    - ./premake-mac --installer --addpath <wx / opencv path>
    - If building was successfull, you should have a Slither bundle with a 
      universal binary in it now (for PPC and Intel based Macs).

